##################################################################################################
# demo service
##################################################################################################
apiVersion: v1
kind: Namespace
metadata:
  name: test
  labels:
    istio-injection: enabled
    kind: private
---
apiVersion: v1
data:
  .dockerconfigjson: ==
kind: Secret
metadata:
  name: docker-secret
  namespace: test
type: kubernetes.io/dockerconfigjson
---
---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: demo-sa
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: test
  name: demo-v1
  labels:
    app: demo
    version: v1.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: demo
      version: v1.0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demo
        version: v1.0
    spec:
#      serviceAccountName: demo-sa
      containers:
      - image: docker-registry:port/org/demo-service:1.0
        imagePullPolicy: IfNotPresent
        name: demo
        ports:
        - containerPort: 8080
        livenessProbe:
          failureThreshold: 2
          initialDelaySeconds: 150
          periodSeconds: 300
          successThreshold: 1
          timeoutSeconds: 5
          httpGet:
            path: /actuator
            port: 8080
        readinessProbe:
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
          limits:
            cpu: 2000m
            memory: 1000Mi
        volumeMounts:
        - name: config
          mountPath: /usr/share/service/config
      imagePullSecrets:
      - name: docker-secret
      volumes:
      - name: config
        configMap:
          name: demo-config
      nodeSelector:
        role: worker
---
apiVersion: v1
kind: Service
metadata:
  name: demo-service
  namespace: test
  labels:
    app: demo
    service: demo
spec:
  selector:
    app: demo
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-config
data:
  application.properties: |
    #some config
    spring.datasource.url = jdbc:h2:mem:testdb;DB_CLOSE_DELAY=FALSE

